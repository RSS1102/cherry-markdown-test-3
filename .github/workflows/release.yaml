name: Release

on:
  push:
    branches:
      - main

# 全局权限默认值（会被作业级权限覆盖）
permissions:
  actions: none
  checks: none
  contents: none
  deployments: none
  id-token: none
  packages: none
  pull-requests: none
  security-events: none

jobs:
  release:
    # 仅在主仓库运行
    #  if: github.repository == 'Tencent/cherry-markdown'
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 允许提交版本更新
      pull-requests: write  # 允许创建版本PR

    outputs:
      publishedPackages: ${{ steps.changesets.outputs.publishedPackages }}
      publishedClientVersion: ${{ steps.extract_version.outputs.clientVersion }}

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: yarn --frozen-lockfile

      - name: Version Packages
        id: changesets
        uses: changesets/action@v1
        with:
          version: yarn changeset version  # 生成版本提交
          commit: "chore: release"
          title: "chore: release"
          publish: yarn changeset tag
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Version Info
        id: extract_version
        run: |
          published_packages='${{ toJSON(steps.changesets.outputs.publishedPackages) }}'
          
          echo "clientVersion=$(jq -r '.[] | select(.name=="@cherry-markdown/client").version' <<< "$published_packages")" >> $GITHUB_OUTPUT


  build-core-release:
    needs: release
    if: |
      ${{ github.repository == 'Tencent/cherry-markdown' &&
          contains(needs.release.outputs.publishedPackages, '"name":"cherry-markdown"') }}
    permissions:
      contents: read  # 仅允许检出代码
    uses: ./.github/workflows/release-cherry-markdown-build.yaml

  build-client-release:
    needs: release
    if: |
      ${{ github.repository == 'Tencent/cherry-markdown' &&
          contains(needs.release.outputs.publishedPackages, '"name":"@cherry-markdown/client"') }}
    permissions:
      contents: write
    uses: ./.github/workflows/release-client-build.yaml
    with:
      client_version: ${{ needs.release.outputs.publishedClientVersion }}

  build-vscodePlugin-release:
    needs: release
    if: |
      ${{ github.repository == 'Tencent/cherry-markdown' &&
          contains(needs.release.outputs.publishedPackages, '"name":"cherry-markdown-vscode-plugin"') }}
    permissions:
      contents: read
    uses: ./.github/workflows/release-vscode-plugin-build.yaml
